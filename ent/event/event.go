// Code generated by ent, DO NOT EDIT.

package event

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the event type in the database.
	Label = "event"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStreamId holds the string denoting the streamid field in the database.
	FieldStreamId = "stream_id"
	// FieldStreamPosition holds the string denoting the streamposition field in the database.
	FieldStreamPosition = "stream_position"
	// FieldEventType holds the string denoting the eventtype field in the database.
	FieldEventType = "event_type"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// FieldCreatedDate holds the string denoting the createddate field in the database.
	FieldCreatedDate = "created_date"
	// Table holds the table name of the event in the database.
	Table = "events"
)

// Columns holds all SQL columns for event fields.
var Columns = []string{
	FieldID,
	FieldStreamId,
	FieldStreamPosition,
	FieldEventType,
	FieldData,
	FieldCreatedDate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// StreamIdValidator is a validator for the "StreamId" field. It is called by the builders before save.
	StreamIdValidator func(string) error
	// DefaultStreamPosition holds the default value on creation for the "StreamPosition" field.
	DefaultStreamPosition uint64
	// EventTypeValidator is a validator for the "EventType" field. It is called by the builders before save.
	EventTypeValidator func(string) error
)

// OrderOption defines the ordering options for the Event queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByStreamId orders the results by the StreamId field.
func ByStreamId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStreamId, opts...).ToFunc()
}

// ByStreamPosition orders the results by the StreamPosition field.
func ByStreamPosition(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStreamPosition, opts...).ToFunc()
}

// ByEventType orders the results by the EventType field.
func ByEventType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEventType, opts...).ToFunc()
}

// ByCreatedDate orders the results by the CreatedDate field.
func ByCreatedDate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedDate, opts...).ToFunc()
}
